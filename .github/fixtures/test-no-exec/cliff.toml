[changelog]
# A static header for the changelog.
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""
# A Tera template to be rendered for each release in the changelog (see https://keats.github.io/tera/docs/#introduction).
body_template = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""
# A Tera template to be rendered as the changelog's footer (see https://keats.github.io/tera/docs/#introduction).
footer_template = """
<!-- generated by git-cliff -->
"""
# Whether to remove leading and trailing whitespaces from all lines of the changelog's body.
trim_body_whitespace = true
# A list of postprocessors using regex to modify the changelog.
postprocessors = [
    { pattern = '.*', replace_command = 'this_command_does_not_exist' },
]

[commit]
# A list of parsers using regex for extracting data from the commit message.
# Sets the commits' `group` and `scope` and can decide to exclude commits from further processing.
commit_parsers = [
    { message = "^feat", group = "Features", default_scope = "app" },
    { message = "^fix", group = "Bug Fixes", scope = "cli" },
]
# A list of preprocessors to modify commit messages using regex prior to further processing.
message_preprocessors = [
    { pattern = '.*', replace_command = "this_command_does_not_exist" },
]
